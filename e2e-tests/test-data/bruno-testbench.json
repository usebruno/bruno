{
  "name": "bruno-testbench",
  "version": "1",
  "items": [
    {
      "type": "http",
      "name": "ping",
      "seq": 1,
      "request": {
        "url": "https://echo.usebruno.com",
        "method": "POST",
        "headers": [],
        "params": [],
        "body": {
          "mode": "json",
          "json": "true",
          "formUrlEncoded": [],
          "multipartForm": []
        },
        "script": {
          "req": "console.log(bru.getEnvName());"
        },
        "vars": {
          "req": [
            {
              "name": "m4",
              "value": "true",
              "enabled": true,
              "local": false
            },
            {
              "name": "pong",
              "value": "pong",
              "enabled": true,
              "local": false
            }
          ]
        },
        "assertions": [
          {
            "name": "res.status",
            "value": "eq 200",
            "enabled": true,
            "uid": "O8Ti6rBho5w74uHwQC4ti"
          },
          {
            "name": "res.body",
            "value": "eq {{pong}}",
            "enabled": false,
            "uid": "zyEmziWB2HC6aMEjZenxI"
          }
        ],
        "tests": "test(\"should ping pong\", function() {\r\n  const data = res.getBody();\r\n  expect(data).to.equal(bru.getVar(\"pong\"));\r\n});",
        "auth": {
          "mode": "none"
        }
      }
    },
    {
      "type": "folder",
      "name": "auth",
      "items": [
        {
          "type": "folder",
          "name": "basic",
          "items": [
            {
              "type": "folder",
              "name": "via auth",
              "items": [
                {
                  "type": "http",
                  "name": "Basic Auth 200_2",
                  "seq": 1,
                  "request": {
                    "url": "{{host}}/api/auth/basic/protected",
                    "method": "POST",
                    "headers": [],
                    "params": [],
                    "body": {
                      "mode": "json",
                      "json": "",
                      "formUrlEncoded": [],
                      "multipartForm": []
                    },
                    "script": {},
                    "vars": {},
                    "assertions": [
                      {
                        "name": "res.status",
                        "value": "200",
                        "enabled": true,
                        "uid": "iCSvRFXyA1zWHGc5Z0jub"
                      },
                      {
                        "name": "res.body.message",
                        "value": "Authentication successful",
                        "enabled": true,
                        "uid": "VpNbivqljxFN7kj8WutCE"
                      }
                    ],
                    "tests": "",
                    "auth": {
                      "mode": "basic",
                      "basic": {
                        "username": "bruno",
                        "password": "{{basic_auth_password}}"
                      }
                    }
                  }
                },
                {
                  "type": "http",
                  "name": "Basic Auth 200_1",
                  "seq": 3,
                  "request": {
                    "url": "{{host}}/api/auth/basic/protected",
                    "method": "POST",
                    "headers": [],
                    "params": [],
                    "body": {
                      "mode": "json",
                      "json": "",
                      "formUrlEncoded": [],
                      "multipartForm": []
                    },
                    "script": {},
                    "vars": {},
                    "assertions": [
                      {
                        "name": "res.status",
                        "value": "200",
                        "enabled": true,
                        "uid": "l8XE0eNEkJMG9TaoskdAE"
                      },
                      {
                        "name": "res.body.message",
                        "value": "Authentication successful",
                        "enabled": true,
                        "uid": "vGjqSCJ5kObMxChddu2hB"
                      }
                    ],
                    "tests": "",
                    "auth": {
                      "mode": "basic",
                      "basic": {
                        "username": "bruno",
                        "password": "{{basic_auth_password}}"
                      }
                    }
                  }
                },
                {
                  "type": "http",
                  "name": "Basic Auth 400",
                  "seq": 2,
                  "request": {
                    "url": "{{host}}/api/auth/basic/protected",
                    "method": "POST",
                    "headers": [],
                    "params": [],
                    "body": {
                      "mode": "json",
                      "json": "",
                      "formUrlEncoded": [],
                      "multipartForm": []
                    },
                    "script": {},
                    "vars": {},
                    "assertions": [
                      {
                        "name": "res.status",
                        "value": "401",
                        "enabled": true,
                        "uid": "H8EPi0SQp8LcSUOuzVfnK"
                      },
                      {
                        "name": "res.body",
                        "value": "Unauthorized",
                        "enabled": true,
                        "uid": "5fXbAaUZ2qRKI8pTxjpb5"
                      }
                    ],
                    "tests": "",
                    "auth": {
                      "mode": "none"
                    }
                  }
                }
              ]
            },
            {
              "type": "folder",
              "name": "via script",
              "items": [
                {
                  "type": "http",
                  "name": "Basic Auth 200",
                  "seq": 1,
                  "request": {
                    "url": "{{host}}/api/auth/basic/protected",
                    "method": "POST",
                    "headers": [],
                    "params": [],
                    "body": {
                      "mode": "json",
                      "json": "",
                      "formUrlEncoded": [],
                      "multipartForm": []
                    },
                    "script": {
                      "req": "const username = \"bruno\";\r\nconst password = \"della\";\r\n\r\nconst authString = `${username}:${password}`;\r\nconst encodedAuthString = require('btoa')(authString);\r\n\r\nreq.setHeader(\"Authorization\", `Basic ${encodedAuthString}`);"
                    },
                    "vars": {},
                    "assertions": [
                      {
                        "name": "res.status",
                        "value": "eq 200",
                        "enabled": true,
                        "uid": "DorRqf2LtqgadZsCpuFLe"
                      },
                      {
                        "name": "res.body.message",
                        "value": "Authentication successful",
                        "enabled": true,
                        "uid": "lewU99TXqV9ESCsSuI2xR"
                      }
                    ],
                    "tests": "",
                    "auth": {
                      "mode": "none"
                    }
                  }
                },
                {
                  "type": "http",
                  "name": "Basic Auth 401",
                  "seq": 2,
                  "request": {
                    "url": "{{host}}/api/auth/basic/protected",
                    "method": "POST",
                    "headers": [],
                    "params": [],
                    "body": {
                      "mode": "json",
                      "json": "",
                      "formUrlEncoded": [],
                      "multipartForm": []
                    },
                    "script": {
                      "req": "const username = \"bruno\";\r\nconst password = \"invalid\";\r\n\r\nconst authString = `${username}:${password}`;\r\nconst encodedAuthString = require('btoa')(authString);\r\n\r\nreq.setHeader(\"Authorization\", `Basic ${encodedAuthString}`);"
                    },
                    "vars": {},
                    "assertions": [
                      {
                        "name": "res.status",
                        "value": "401",
                        "enabled": true,
                        "uid": "nJs4fS0CG2reNKDtx7cD0"
                      },
                      {
                        "name": "res.body",
                        "value": "Unauthorized",
                        "enabled": true,
                        "uid": "qJvfKJfTBHajbX5ubkgSs"
                      }
                    ],
                    "tests": "",
                    "auth": {
                      "mode": "none"
                    }
                  }
                }
              ]
            }
          ]
        },
        {
          "type": "folder",
          "name": "bearer",
          "items": [
            {
              "type": "folder",
              "name": "via headers",
              "items": [
                {
                  "type": "http",
                  "name": "Bearer Auth 401",
                  "seq": 2,
                  "request": {
                    "url": "{{host}}/api/auth/bearer/protected",
                    "method": "GET",
                    "headers": [],
                    "params": [],
                    "body": {
                      "mode": "json",
                      "json": "",
                      "formUrlEncoded": [],
                      "multipartForm": []
                    },
                    "script": {
                      "res": "bru.setEnvVar(\"foo\", \"bar\");"
                    },
                    "vars": {},
                    "assertions": [
                      {
                        "name": "res.status",
                        "value": "401",
                        "enabled": true,
                        "uid": "tMbRtRl2TMKRZFUP2k6aT"
                      },
                      {
                        "name": "res.body.message",
                        "value": "Unauthorized",
                        "enabled": true,
                        "uid": "5Qum3oX22dgWrwLfOe2mj"
                      }
                    ],
                    "tests": "",
                    "auth": {
                      "mode": "none"
                    }
                  }
                },
                {
                  "type": "http",
                  "name": "Bearer Auth 200",
                  "seq": 1,
                  "request": {
                    "url": "{{host}}/api/auth/bearer/protected",
                    "method": "GET",
                    "headers": [
                      {
                        "name": "Authorization",
                        "value": "Bearer your_secret_token",
                        "enabled": true
                      }
                    ],
                    "params": [],
                    "body": {
                      "mode": "json",
                      "json": "",
                      "formUrlEncoded": [],
                      "multipartForm": []
                    },
                    "script": {
                      "res": "bru.setEnvVar(\"foo\", \"bar\");"
                    },
                    "vars": {
                      "req": [
                        {
                          "name": "a-c",
                          "value": "foo",
                          "enabled": true,
                          "local": false
                        }
                      ]
                    },
                    "assertions": [
                      {
                        "name": "res.status",
                        "value": "200",
                        "enabled": true,
                        "uid": "4J8pOVQPeXZ0899Kc0L9d"
                      },
                      {
                        "name": "res.body.message",
                        "value": "Authentication successful",
                        "enabled": true,
                        "uid": "xnrJt6AORPXjGos8F4D5Z"
                      }
                    ],
                    "tests": "",
                    "auth": {
                      "mode": "none"
                    }
                  }
                }
              ]
            },
            {
              "type": "folder",
              "name": "via auth",
              "items": [
                {
                  "type": "http",
                  "name": "Bearer Auth 200",
                  "seq": 1,
                  "request": {
                    "url": "{{host}}/api/auth/bearer/protected",
                    "method": "GET",
                    "headers": [],
                    "params": [],
                    "body": {
                      "mode": "none",
                      "formUrlEncoded": [],
                      "multipartForm": []
                    },
                    "script": {
                      "res": "bru.setEnvVar(\"foo\", \"bar\");"
                    },
                    "vars": {},
                    "assertions": [
                      {
                        "name": "res.status",
                        "value": "200",
                        "enabled": true,
                        "uid": "lASJ59Szp5cpoAbPf4B1A"
                      },
                      {
                        "name": "res.body.message",
                        "value": "Authentication successful",
                        "enabled": true,
                        "uid": "z4hbCVIYy2oPLvHlzM14k"
                      }
                    ],
                    "tests": "",
                    "auth": {
                      "mode": "bearer",
                      "bearer": {
                        "token": "{{bearer_auth_token}}"
                      }
                    }
                  }
                },
                {
                  "type": "http",
                  "name": "Bearer Auth 401",
                  "seq": 2,
                  "request": {
                    "url": "{{host}}/api/auth/bearer/protected",
                    "method": "GET",
                    "headers": [],
                    "params": [],
                    "body": {
                      "mode": "none",
                      "formUrlEncoded": [],
                      "multipartForm": []
                    },
                    "script": {
                      "res": "bru.setEnvVar(\"foo\", \"bar\");"
                    },
                    "vars": {},
                    "assertions": [
                      {
                        "name": "res.status",
                        "value": "401",
                        "enabled": true,
                        "uid": "DvPxTPoiSNivcKgTsP64T"
                      },
                      {
                        "name": "res.body.message",
                        "value": "Unauthorized",
                        "enabled": true,
                        "uid": "IIDTwziD9gO41BQlYMua2"
                      }
                    ],
                    "tests": "",
                    "auth": {
                      "mode": "none"
                    }
                  }
                }
              ]
            }
          ]
        },
        {
          "type": "folder",
          "name": "cookie",
          "items": [
            {
              "type": "http",
              "name": "Check",
              "seq": 2,
              "request": {
                "url": "{{host}}/api/auth/cookie/protected",
                "method": "GET",
                "headers": [],
                "params": [],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "auth": {
                  "mode": "none"
                }
              }
            },
            {
              "type": "http",
              "name": "Login",
              "seq": 1,
              "request": {
                "url": "{{host}}/api/auth/cookie/login",
                "method": "POST",
                "headers": [],
                "params": [],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "",
                "auth": {
                  "mode": "none"
                }
              }
            }
          ]
        }
      ]
    },
    {
      "type": "folder",
      "name": "echo",
      "items": [
        {
          "type": "http",
          "name": "echo json",
          "seq": 1,
          "request": {
            "url": "https://echo.usebruno.com",
            "method": "POST",
            "headers": [
              {
                "name": "foo",
                "value": "bar",
                "enabled": true
              }
            ],
            "params": [],
            "body": {
              "mode": "sparql",
              "text": "true",
              "sparql": "true",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {
              "req": "bru.setVar(\"foo\", \"foo-world-2\");"
            },
            "vars": {},
            "assertions": [
              {
                "name": "res.status",
                "value": "eq 200",
                "enabled": true,
                "uid": "jqf0f5V70cpBHHn7wqPYo"
              }
            ],
            "tests": "test(\"should return json\", function() {\n  const data = res.getBody();\n  expect(res.getBody()).to.eql({\n    \"hello\": \"bruno\"\n  });\n});\n",
            "auth": {
              "mode": "apikey",
              "apikey": {
                "key": "testapikey",
                "value": "brunoapi key",
                "placement": "header"
              }
            }
          }
        },
        {
          "type": "http",
          "name": "echo plaintext",
          "seq": 3,
          "request": {
            "url": "{{host}}/api/echo/text",
            "method": "POST",
            "headers": [],
            "params": [],
            "body": {
              "mode": "text",
              "text": "hello",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {},
            "vars": {},
            "assertions": [
              {
                "name": "res.status",
                "value": "eq 200",
                "enabled": true,
                "uid": "7v27KcFTOgQsRdBpWOLNi"
              }
            ],
            "tests": "test(\"should return plain text\", function() {\r\n  const data = res.getBody();\r\n  expect(res.getBody()).to.eql(\"hello\");\r\n});\r\n",
            "auth": {
              "mode": "none"
            }
          }
        },
        {
          "type": "http",
          "name": "echo xml parsed",
          "seq": 4,
          "request": {
            "url": "{{host}}/api/echo/xml-parsed",
            "method": "POST",
            "headers": [],
            "params": [],
            "body": {
              "mode": "xml",
              "xml": "<hello>\r\n  <world>bruno</world>\r\n</hello>",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {},
            "vars": {},
            "assertions": [
              {
                "name": "res.status",
                "value": "eq 200",
                "enabled": true,
                "uid": "VGlNq6zEwCtaHIgc27NYi"
              }
            ],
            "tests": "test(\"should return parsed xml\", function() {\r\n  const data = res.getBody();\r\n  expect(res.getBody()).to.eql({\r\n    \"hello\": {\r\n      \"world\": [\r\n        \"bruno\"\r\n      ]\r\n    }\r\n  });\r\n});\r\n",
            "auth": {
              "mode": "none"
            }
          }
        },
        {
          "type": "http",
          "name": "echo xml raw",
          "seq": 5,
          "request": {
            "url": "{{host}}/api/echo/xml-raw",
            "method": "POST",
            "headers": [],
            "params": [],
            "body": {
              "mode": "xml",
              "xml": "<hello><world>bruno</world></hello>",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {},
            "vars": {},
            "assertions": [],
            "tests": "",
            "auth": {
              "mode": "none"
            }
          }
        }
      ]
    },
    {
      "type": "folder",
      "name": "preview",
      "items": [
        {
          "type": "folder",
          "name": "image",
          "items": [
            {
              "type": "http",
              "name": "bruno",
              "seq": 1,
              "request": {
                "url": "https://www.usebruno.com/images/landing-2.png",
                "method": "GET",
                "headers": [],
                "params": [],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": []
                },
                "script": {},
                "vars": {},
                "assertions": [],
                "tests": "test(\"should return parsed xml\", function() {\r\n  const headers = res.getHeaders();\r\n  expect(headers['content-type']).to.eql(\"image/png\");\r\n});\r\n",
                "auth": {
                  "mode": "none"
                }
              }
            }
          ]
        },
        {
          "type": "folder",
          "name": "html",
          "items": [
            {
              "type": "http",
              "name": "bruno",
              "seq": 1,
              "request": {
                "url": "https://www.usebruno.com",
                "method": "GET",
                "headers": [],
                "params": [],
                "body": {
                  "mode": "none",
                  "formUrlEncoded": [],
                  "multipartForm": []
                },
                "script": {},
                "vars": {},
                "assertions": [
                  {
                    "name": "res.status",
                    "value": "eq 200",
                    "enabled": true,
                    "uid": "yeZlymIifhJH4HidTx2HX"
                  }
                ],
                "tests": "test(\"should return parsed xml\", function() {\r\n  const headers = res.getHeaders();\r\n  expect(headers['content-type']).to.eql(\"text/html; charset=utf-8\");\r\n});\r\n",
                "auth": {
                  "mode": "none"
                }
              }
            }
          ]
        }
      ]
    },
    {
      "type": "folder",
      "name": "redirects",
      "items": [
        {
          "type": "http",
          "name": "Disable Redirect",
          "seq": 1,
          "request": {
            "url": "{{host}}/redirect-to-ping",
            "method": "GET",
            "headers": [],
            "params": [],
            "body": {
              "mode": "none",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {
              "req": "req.setMaxRedirects(0);"
            },
            "vars": {},
            "assertions": [
              {
                "name": "res.status",
                "value": "302",
                "enabled": true,
                "uid": "rkMVyDy3bJSiVHiUmUku8"
              }
            ],
            "tests": "test(\"should disable redirect to ping\", function() {\r\n  const data = res.getBody();\r\n  expect(data).to.equal('Found. Redirecting to /ping');\r\n});",
            "auth": {
              "mode": "none"
            }
          }
        },
        {
          "type": "http",
          "name": "Test Redirect",
          "seq": 2,
          "request": {
            "url": "{{host}}/redirect-to-ping",
            "method": "GET",
            "headers": [],
            "params": [],
            "body": {
              "mode": "none",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "script": {},
            "vars": {},
            "assertions": [
              {
                "name": "res.status",
                "value": "200",
                "enabled": true,
                "uid": "C1LF0praC4Yz48u2lZBvd"
              },
              {
                "name": "res.body",
                "value": "pong",
                "enabled": true,
                "uid": "fSnD9593q87RdOSbEp1qe"
              }
            ],
            "tests": "test(\"should redirect to ping\", function() {\r\n  const data = res.getBody();\r\n  expect(data).to.equal('pong');\r\n});",
            "auth": {
              "mode": "none"
            }
          }
        }
      ]
    }
  ],
  "environments": [
    {
      "variables": [
        {
          "name": "host",
          "value": "http://localhost:80",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "bearer_auth_token",
          "value": "your_secret_token",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "basic_auth_password",
          "value": "della",
          "enabled": true,
          "secret": false,
          "type": "text"
        }
      ],
      "name": "Local"
    },
    {
      "variables": [
        {
          "name": "host",
          "value": "https://testbench-sanity.usebruno.com",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "bearer_auth_token",
          "value": "your_secret_token",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "basic_auth_password",
          "value": "della",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "foo",
          "value": "bar",
          "enabled": true,
          "secret": false,
          "type": "text"
        }
      ],
      "name": "Prod"
    }
  ],
  "root": {
    "request": {
      "auth": {
        "mode": "none",
        "basic": {
          "username": "bruno",
          "password": "{{basicAuthPassword}}"
        },
        "bearer": {
          "token": "{{bearerAuthToken}}"
        }
      },
      "headers": [
        {
          "name": "check",
          "value": "again",
          "enabled": true,
          "uid": "VqPT8fGovVKrEoizmx98q"
        }
      ]
    },
    "docs": "# bruno-testbench 🐶\r\n\r\nThis is a test collection that I am using to test various functionalities around bruno"
  },
  "brunoConfig": {
    "version": "1",
    "name": "bruno-testbench",
    "type": "collection",
    "proxy": {
      "enabled": false,
      "protocol": "http",
      "hostname": "{{proxyHostname}}",
      "port": 4000,
      "auth": {
        "enabled": false,
        "username": "anoop"
      },
      "bypassProxy": ""
    },
    "scripts": {
      "moduleWhitelist": [
        "crypto"
      ],
      "filesystemAccess": {
        "allow": true
      }
    },
    "clientCertificates": {
      "enabled": true,
      "certs": [
        {
          "domain": "localhost:4554",
          "type": "pfx",
          "pfxFilePath": "../../../../../bruno-testbench/ssl/client_certs/client.pfx",
          "passphrase": "bruno"
        }
      ]
    },
    "presets": {
      "requestType": "http",
      "requestUrl": "http://localhost:6000"
    },
    "ignore": [
      "node_modules",
      ".git"
    ]
  }
}