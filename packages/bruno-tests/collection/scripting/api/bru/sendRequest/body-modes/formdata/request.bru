meta {
  name: request
  type: http
  seq: 1
}

post {
  url: https://echo.usebruno.com
  body: none
  auth: inherit
}

tests {
  await test("formdata body mode with formdata content-type", async () => {
    await bru.sendRequest({
      url: "https://echo.usebruno.com",
      method: "POST",
      header: {
        'Content-Type': 'multipart/form-data',
      },
      body: {
        mode: "formdata",
        formdata: [
          { key: "client_id", value: "client_id_value" },
          { key: "client_secret", value: "client_secret_value" }
        ]
      }
    }, (error, response) => {
      expect(response?.data).to.contain("client_id");
      expect(response?.data).to.contain("client_id_value");
      expect(response?.data).to.contain("client_secret");
      expect(response?.data).to.contain("client_secret_value");
    });
  });
  
  
  await test("formdata body mode", async () => {
    await bru.sendRequest({
      url: "https://echo.usebruno.com",
      method: "POST",
      body: {
        mode: "formdata",
        formdata: [
          { key: "client_id", value: "client_id_value" },
          { key: "client_secret", value: "client_secret_value" }
        ]
      }
    }, (error, response) => {
      expect(response?.data).to.contain("client_id");
      expect(response?.data).to.contain("client_id_value");
      expect(response?.data).to.contain("client_secret");
      expect(response?.data).to.contain("client_secret_value");
    });
  });
}
